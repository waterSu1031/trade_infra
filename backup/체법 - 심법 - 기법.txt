
ㅁㅁㅁ 체	법 ---------------------------------------------------------------------------------------

체력이 모든것의 시작이다.
체력이 곧 심력이고, 심력이 곧 지력이다. 

ㅁ 체 법
0. 무의식을 계획		아침에 나를 믿지마라. 밤에 준비하고 내일을 계획해라
1. 운동이 시작		가장 하기 싫은 일부터 시작해라. ( 아침=계단, 점심= 산책, 밤=헬스(스데풀복스))
2. 				식사=운동, 비타민,  
3. 			

ㅁ 루 틴
1. 6	기상후	샤포계	샤워, 포도주스, 계단
2. 2	점심후	산		산책
3. 8	퇴근후	목도		목욕, 도시락
4. 0	취침전	삼약샤	3대30, 약술, 샤브
	
5. 7	일요일			식초, 관장

ㅁㅁㅁ 심	법 ---------------------------------------------------------------------------------------
 
투자는 예측이지만, 투기는 심리다.

1. 난 기다리지 못한다.
> 사고 기다리지말고 기다렸다 사라. 		사고 있으면 집중력을 소모한다.
> 숏만 사라.					롱은 흔들린다. 롱은 장초반만
> 어차피 오를거라 예측하지마라.		예측이 아니라 대응의 영역이다.

2. 감정적으로 사지마라.
> 항상 루틴을 밟아서 사라			급히 사면 마음이 흔들린다.
> 수익손실에 무관하게 기계적으로 매매	감정을 배제한 기계적인 루틴이 확신을 줌.
> 수익금액을 확인하지마라. 			

3. 집중력을 유지해라 
> 잔수익을 포기하고 자주매매하지 마라.	집중력의 소모는 수익의 소모다. 
> 잃지않는 매매가 지속가능한 매매다.	더하고 빼서 원점은 원점이 아니다.
> 목표, 마감을 설정해라.			수익 100만원 / 시간 8~12 , 2~5


ㅁㅁㅁ 지	법 ---------------------------------------------------------------------------------------

위험+수수료 vs 수익. 
ㅁ 주가 이해
0. 분석으로 예상은 하돼, 항상 파동을 느껴고 대응하라.
주가는 추세>저항>공백 안에서 파동이 어떻게 움직이는지다.  
지표보단, 차트가 더 정확하다. 지표는 안보이는 큰 흐름.
고점에서 사지말고 추세가 꺠지면 추격매수해라.

시간상은 5파고점, 가격상 1,4파 고점에서 매도해라.

파동의 크기에 따라서 주기가 달라짐

ㅁ 진입 루틴

파동을 대중소로 정리하라 머리에 담으면 혼란스럽다.



DMI , SPD , ACC , 기간값 동적 , 이동평균선 , 일목, 웨이브 트렌드, 피보나치 볼린저 

종목 선택 > 중추세 확인 > 타이밍 > 지지저항 


3. 바닥에서 최저에 살려고 하지마라 
청산은 바닥, 고점의 정점에서 진입은 지지, 저항이 깨지면...
5파정점.
> 변곡점에서 강한 지지를 이탈하면 추격해라


지지-저항 ( 가로 가격, 세로 시간, 대각 추세 ) ,
지지-저항간의 간격이 예상수익 단위 
지지저항이 뚫리는고, 이후에 상승파동이 없을떄 진입

1파 이후엔 조정 
1파 이후엔 2파 
변곡
다음 파동이 뭐가 가능한지 확인

1분봉을 보면 1분단위, 12분봉이면 12분 단위의 하락과 상승이 나온다.

일목균형표 = 시간-시간 , 가격-가격 , 균형-균형


가로(가격) , 세로(시간) , 대각선(추세) , 곡선(파동) 

추세 - 수요 vs 공급 - 흐름
파동 - 타이밍 - 심리
지저 - 매물, 추세 - 가격

간극 - 
시간


ㅁ 차트 원리
수수료를 우습게 보지마라.

ㅁ 지표
파동의 크기가 파동의 사이즈를 결정, 높낮이가 크로스 기간으로 총기간 산정

앞으로 내리는 것밖에 없는 자리에서 팔아라.

수익 vs 위험

중간에 불확실하고 수익 대비 위험이 비슷한 종목을 처다보지마라

동일 파동에 대각선이 가로보다 길다 그래서 추가파동이 온다.

청산은 바닥, 고점의 정점에서 진입은 지지, 저항이 깨지면...

추세선을 따라서 추세가 맞다는건...
	적정량의 사람이 들어온다
추세선을 따라서 추세가 틀리다는건...
	그 사람의 마음이 파동에 따라 흔들린다.
> 추세선을 긋데, 파동의 엇나감(극강/극약)을 피하거나 노리자.

앞의 파동은 다음 파동에 영향을. 그 앞은 또 그앞의
그렇게 쌍이 이루어지고, 3쌍이 이루어짐.
연결의 마침은 이음새이고, 연결의 이어짐은 가격이 어긋남임.

ㅁ 투자 루틴
1. 종목 선정

2. 차트분석

ㅁ
이음새를 찾아라 
이음새가 추세인지 저항인지 구분하라 
이음색 기준으로 몇번째 파동에서 꺽였는지 확인하라.

3. 타이밍 분석

4. 진입시점

5. 청산시점

trade
trade_infra
trade_batch
trade_engine
trade_dashboard
trade_frontend

6184-0280-3069

sudo docker network create trade-network

sudo docker volume create trade_postgres_data

sudo docker run --name trade_postgres \
  -e POSTGRES_DB=trade \
  -e POSTGRES_USER=freeksj \
  -e POSTGRES_PASSWORD=Lsld1501! \
  -p 5432:5432 \
  -v trade_postgres_data:/data\
  -d postgres:latest

sudo docker volume create trade_redis_data

sudo docker run --name trade_redis \
  -p 6379:6379 \
  -v trade_redis_data:/redis\
  -d redis:latest


docker 


폴더경로를 구분할때 전체 path를 적는게 좋을까? 아니면 레벨별로 여러컬럼을 사용하는게 좋을까?
트리구조를 LLM이 인식을 잘한다고 하던데 그걸 데이터넷에 표현하려면 어떤 구조로 표현되니?

연결 : 파일 > 모듈 > 펑션,필드
mod_id에 dependencies는 어떻게 사용하지?


code mode / discussion mode


discussion mode 에서 

ㅁ md 파일을 만드는데 공을 많이 들임.
	AI 			download					I			upload
LLM이 폴더구조 > 만들걸 포맷에 맞춰서 내림 > 내가 커스텀내용 수정 > 다시 LLM에 올림

변경사항을 Git으로 반영. or IDE 의 Local history

ai는 데이터기준으로 돌아간다고 하던데 , 일반 프로그램과 어떻게 다른거지? 일반프로그램은 뭐 기준으로 돌아간다고 볼수 있니?

Annotaion은 무슨뜻이지? 그리고 자바 말고 다른언어도 저런 방식을 사용하니? 자바가 아니라 스프링만의 방식이니?

Module, Component, Class, Function 이것의 개념적 차이를 자세히 알려줘. 그리고 자바외에 다른 구분타입은 뭐가 있는지 간단히 알려줘.?

Project Goal과 Project Purpose의 차이는? 트리구조의 상위를 parent, child로 사용하던데 이런 계층을 다른 단어로 구분은 안하니? 

모듈, 컴포넌트의 차이는 클래스, 펑션, 필드의 차이는? 

자바는 1파일 = 1클래스인데 다른 언어도 이와 같은 구조니?


Sonet회의 > md > Opus코딩 >>
>> Sonet회의 > md > Opus코딩


개발 설계에서 priority, tech stack, schema , structure, dependencies  의 뜻에 대해서 알려줘. 

subject, action, object 의 각 단어의 뜻을 알려줘.

트리구조 LLM이 이해하기 편하면서도 적은 컬럼으로 표현할 방법이 없을까?


실제 AI 전문가들은 이런 LLM인식률과 같은걸 신경써서 만드니? 어떤 점을 신경쓰니 또?

실제 프로젝트를 LLM에 넣어 요약/코드생성/자동문서화하는 최적화 전략, 토큰 절약 요령, 부분별 인식-통합 전략   알려줘.

실제 LLM용 설계서 포맷, 토큰 절약+최대 전달력 문서 예시, 설계→코드 자동화 워크플로우   알려줘

실제로는 트리구조+표(관계형) 방식을 서로 변환·호환하는 게 실무적으론 가장 유연

예를 들어 LLM이 이해하는 과정에서...  함수와 파라미터를 한 마크다운에 넣을떄와 별도 마크다운에 넣을떄,
한곳에 있으면 계속 읽지만, 별도면 마크다운을 읽다가 파라미터 마크다운에 가서 파라미터를 찾아서 매칭을 해야하는데
분할에 따른 LLM이 읽고 이해하는 과정과 속도 부하는 어떻게 차이나는지 LLM이 진행하는 과정을 설명하면서 비교해줘.

파일 - 클래스	1 : 1

실전 예시 엑셀, LLM 최적화 프롬프트, 역할별 세부속성 구조

일반적으로 말고 에디터 같은 프로그램은 웹과 다르잖아 그런건 어떤 언어로 만들지?
내부적으로 어떻게 돌아가는지 보안상 뚫릴수도 있니?

